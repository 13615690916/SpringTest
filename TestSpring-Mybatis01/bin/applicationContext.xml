<?xml version="1.0" encoding="UTF-8" ?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" 
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
       http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
       http://www.springframework.org/schema/context 
       http://www.springframework.org/schema/context/spring-context-4.0.xsd
       http://www.springframework.org/schema/tx 
       http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
       http://www.springframework.org/schema/aop
       http://www.springframework.org/schema/aop/spring-aop-4.0.xsd">
    
    <!-- 扫描类包，将标注Spring注解的类自动转化Bean，同时完成Bean的注入 -->
    <context:component-scan base-package="com.smart.*.service"/>
    
    <!-- 引入外置文件 -->  
    <bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">  
        <property name="location" value="classpath:jdbc.properties"/>  
    </bean>
    
    <!-- 配置数据源 -->
	<bean id="dataSource" class="org.apache.commons.dbcp2.BasicDataSource"
		destroy-method="close" >
		<property name="driverClassName" value="${jdbc.driverClassName}"></property>
		<property name="url" value="${jdbc.url}"></property> 
		<property name="username" value="${jdbc.username}"></property>
		<property name="password" value="${jdbc.password}"></property> 
	</bean>
	
	 <!-- spring和MyBatis完美整合 -->  
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">  
        <!-- 指定数据源 -->  
        <property name="dataSource" ref="dataSource"/>  
        <!-- 具体指定xml文件，可不配 -->  
        <property name="configLocation" value="classpath:mybatis-config.xml"/>  
        <!-- 自动扫描mapping.xml文件，**表示迭代查找 ,,也可在mybatis-config.xml中单独指定xml文件 -->  
        <property name="mapperLocations" value="classpath:com/smart/**/mappers/*.xml"/>
    </bean>  
    
    <bean id="userMapper" class="org.mybatis.spring.mapper.MapperFactoryBean">  
     	<property name="mapperInterface" value="com.smart.user.mappers.UserMapper"></property>  
     	<property name="sqlSessionFactory" ref="sqlSessionFactory"></property>  
 	</bean>
 	
    <!--  <bean id="loginLogMapper" class="org.mybatis.spring.mapper.MapperFactoryBean">  
     	<property name="mapperInterface" value="com.smart.loginLog.mappers.LoginLogMapper"></property>  
     	<property name="sqlSessionFactory" ref="sqlSessionFactory"></property>  
 	</bean> -->
	
	<!-- 配置Jdbc模板  -->
	<!-- <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate"
		p:dataSource-ref="dataSource" /> -->
		
	<!-- 配置事务管理器 -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager"
		p:dataSource-ref="dataSource" />
		
	<!-- 通过AOP配置提供事务增强，让service包下所有Bean的所有方法拥有事务 -->
	<aop:config proxy-target-class="true">
		<aop:pointcut id="serviceMethod"
			expression="(execution(* com.smart.service..*(..))) and (@annotation(org.springframework.transaction.annotation.Transactional))" />
		<aop:advisor pointcut-ref="serviceMethod" advice-ref="txAdvice" />
	</aop:config>
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="*" />
		</tx:attributes>
	</tx:advice>
</beans>
